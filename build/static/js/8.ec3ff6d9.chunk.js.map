{"version":3,"sources":["pages/Login/LoginPage.js"],"names":["signInSchema","Yup","shape","email","required","password","min","connect","login","className","initialValues","validationSchema","onSubmit","values","resetForm","errors","touched","type","name","component","disabled"],"mappings":"2MAOMA,EAAeC,MAAaC,MAAM,CACtCC,MAAOF,MACJE,MAAM,uBACNC,SAAS,sBACZC,SAAUJ,MACPK,IAAI,EAAG,qBACPF,SAAS,wBA6DCG,sBAAQ,KAAM,CAAEC,WAAhBD,EA1DG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CACEC,cAAe,CAAEP,MAAO,GAAIE,SAAU,IACtCM,iBAAkBX,EAClBY,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBN,EAAMK,GACNC,EAAU,KALd,SAQG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASH,EAApB,EAAoBA,OAApB,OACC,eAAC,IAAD,CAAMJ,UAAU,OAAhB,UACE,cAAC,IAAD,CACEQ,KAAK,QACLC,KAAK,QACLT,UAAS,4BACPM,EAAOZ,OAASa,EAAQb,MAAQ,aAAe,MAGnD,cAAC,IAAD,CACEe,KAAK,QACLC,UAAU,QACVV,UAAU,6BAEZ,cAAC,IAAD,CACEQ,KAAK,WACLC,KAAK,WACLT,UAAS,4BACPM,EAAOV,UAAYW,EAAQX,SAAW,aAAe,MAGzD,cAAC,IAAD,CACEa,KAAK,WACLC,UAAU,QACVV,UAAU,6BAEZ,wBACEQ,KAAK,SACLR,UAAU,8BACVW,UACGP,EAAOV,QACPU,EAAOR,UACRU,EAAOV,UACPU,EAAOZ,MAPX","file":"static/js/8.ec3ff6d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\nimport { login } from '../../redux/reducers/contacts/contactsOperations.js';\r\n\r\nconst signInSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Email is not valid!')\r\n    .required('Field is required!'),\r\n  password: Yup.string()\r\n    .min(7, 'min length 7 char')\r\n    .required('Field is required!'),\r\n});\r\n\r\nconst LoginPage = ({ login }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-6 offset-3 mt-5\">\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validationSchema={signInSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            login(values);\r\n            resetForm({});\r\n          }}\r\n        >\r\n          {({ errors, touched, values }) => (\r\n            <Form className=\"form\">\r\n              <Field\r\n                type=\"email\"\r\n                name=\"email\"\r\n                className={`form-control mt-2 ${\r\n                  errors.email && touched.email ? 'is-invalid' : ''\r\n                }`}\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"small\"\r\n                className=\"invalid-feedback d-block\"\r\n              />\r\n              <Field\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className={`form-control mt-2 ${\r\n                  errors.password && touched.password ? 'is-invalid' : ''\r\n                }`}\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"small\"\r\n                className=\"invalid-feedback d-block\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-lg mt-2\"\r\n                disabled={\r\n                  !values.email ||\r\n                  !values.password ||\r\n                  errors.password ||\r\n                  errors.email\r\n                }\r\n              >\r\n                Login\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { login })(LoginPage);\r\n"],"sourceRoot":""}