{"version":3,"sources":["components/ComponentPage/PageLoader/Pageloader.js","components/ComponentPage/hocs/withAuth.js","components/ComponentPage/PrivateRoute/PrivateRoute.js","components/ComponentPage/PrivateRoute/PublicRoute.js","components/ComponentPage/AppRoutes/AppRoutes.js","services/routes.js","components/ComponentPage/UserProfile/UserProfile.js","components/ComponentPage/AuthNavbar/AuthNavbar.js","components/ComponentPage/DashBordNavBar/DashBordNavBar.js","components/ComponentPage/Navbar/Navbar.js","components/ComponentPage/Loyout/Loyout.js","Conteiner/App.js","redux/reducers/contacts/contactsReducer.js","redux/store.js","index.js","redux/reducers/contacts/contactsActions.js","redux/reducers/contacts/contactsOperations.js"],"names":["App","type","color","height","width","React","Component","withAuth","Wrapped","withRouter","connect","state","loginIn","Boolean","auth","token","props","component","routeProps","render","to","restricted","AppRoutes","items","routes","map","route","idx","private","class","fallback","HomePage","lazy","LoginPage","routesPath","path","exact","mapDispatchToProps","logout","user","name","email","onClick","AuthNavigation","className","activeClassName","DashboardNavigation","authNavigation","dashboardNavigation","Layout","children","getCurrentUser","this","initialState","createReducer","loginSuccess","_","payload","registerSuccess","getCurrentUserSuccess","logoutSuccess","handleError","error","loginRequest","logoutRequest","registerRequest","getCurrentUserRequest","loginError","logoutError","registerError","getCurrentUserError","itemsCreateReducer","getContactsSuccess","action","addContactSuccess","removeContactSuccess","filter","item","id","filterCreateReducer","changeFilter","contactsReducer","combineReducers","persistConfig","key","storage","whitelist","rootReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REHYDRATE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","addContactRequest","createAction","addContactError","getContactsRequest","getContactsError","removeContactRequest","removeContactError","erroMasage","axios","defaults","baseURL","headers","Authorization","register","credentials","dispatch","post","then","data","catch","login","getState","persistedToken","get","addContact","contac","response","console","log","message","getContacts","setTimeout","removeContact","delete"],"mappings":"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","file":"static/js/main.1c59c5de.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nimport Loader from \"react-loader-spinner\"\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n      </div>\r\n    )\r\n  }\r\n}","import { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst withAuth = Wrapped => {\r\n  function WithAuth(props) {\r\n    return <Wrapped {...props} />;\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    loginIn: Boolean(state.auth.token),\r\n  });\r\n\r\n    return withRouter(connect(mapStateToProps)(WithAuth));\r\n};\r\n\r\nexport default withAuth;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport withAuth from \"../hocs/withAuth\";\r\n\r\nconst PrivateRoute = ({ component: Component, loginIn, ...routeProps }) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        loginIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default withAuth(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport withAuth from '../hocs/withAuth';\r\n\r\nconst PublicRoute = ({ component: Component, loginIn, ...routeProps }) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props => {\r\n        return loginIn && routeProps.restricted ? (\r\n          <Redirect to=\"/contacts\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withAuth(PublicRoute);\r\n","import React, { Suspense } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport PageLoader from '../PageLoader/Pageloader.js';\r\nimport PrivateRoute from '../PrivateRoute/PrivateRoute.js';\r\n\r\nimport PublicRoute from '../PrivateRoute/PublicRoute';\r\n\r\nconst AppRoutes = ({ routes }) => {\r\n  const items = routes.map((route, idx) => {\r\n    // console.log(route);\r\n    return route.private ? (\r\n      <PrivateRoute key={idx} {...route} />\r\n    ) : (\r\n      <PublicRoute key={idx} {...route} />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div class=\"conteiner\">\r\n      <Suspense fallback={<PageLoader />}>\r\n        <Switch>{items}</Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import { lazy } from 'react';\r\n\r\nconst HomePage = lazy(() => import('../pages/Home/HomaPage.js'));\r\nconst LoginPage = lazy(() => import('../pages/Login/LoginPage'));\r\nconst RegisterPage = lazy(() => import('../pages/Register/RegisterPage'));\r\nconst ContactsPage = lazy(() => import('../pages/Contacts/ContactsPage'));\r\nconst NotFoundPage = lazy(() => import('../pages/NotFound/NotFoundPage'));\r\n\r\nconst routesPath = {\r\n  HOME: '/',\r\n  REGISTER: '/register',\r\n  LOGIN: '/login',\r\n  CONTACTS: '/contacts',\r\n};\r\n\r\nconst routes = [\r\n  {\r\n    path: routesPath.HOME,\r\n    exact: true,\r\n    component: HomePage,\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: routesPath.REGISTER,\r\n    exact: true,\r\n    component: RegisterPage,\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: routesPath.LOGIN,\r\n    exact: true,\r\n    component: LoginPage,\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: routesPath.CONTACTS,\r\n    exact: true,\r\n    component: ContactsPage,\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    exact: true,\r\n    component: NotFoundPage,\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n];\r\n\r\nexport { routes, routesPath };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../../redux/reducers/contacts/contactsOperations.js';\r\n\r\nconst UserProfile = props => {\r\n  const { user, logout, loginIn } = props;\r\n  const { name, email } = user;\r\n\r\n  const handleLogout = () => logout();\r\n\r\n  return (\r\n    <div>\r\n      {loginIn ? (\r\n        <>\r\n          <h6>name: {name}</h6>\r\n          <h6>email: {email}</h6>\r\n          <button type=\"button\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loginIn: Boolean(state.auth.token),\r\n  user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routesPath } from '../../../services/routes.js';\r\n\r\nconst AuthNavigation = () => {\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <NavLink\r\n          exact\r\n          to={routesPath.LOGIN}\r\n          className=\"nav-link\"\r\n          activeClassName=\"active\"\r\n        >\r\n          Login\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink\r\n          exact\r\n          to={routesPath.REGISTER}\r\n          className=\"nav-link\"\r\n          activeClassName=\"active\"\r\n        >\r\n          Register\r\n        </NavLink>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthNavigation;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routesPath } from '../../../services/routes.js';\r\n\r\nconst DashboardNavigation = () => {\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <NavLink\r\n        exact\r\n        to={routesPath.CONTACTS}\r\n        className=\"nav-link\"\r\n        activeClassName=\"active\"\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DashboardNavigation;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routesPath } from '../../../services/routes.js';\r\nimport UserProfile from '../UserProfile/UserProfile';\r\nimport withAuth from '../hocs/withAuth';\r\nimport AuthNavigation from '../AuthNavbar/AuthNavbar.js';\r\nimport DashboardNavigation from '../DashBordNavBar/DashBordNavBar.js';\r\n\r\n\r\nconst Navbar = ({ loginIn }) => {\r\n\r\n  const authNavigation = !loginIn && <AuthNavigation />;\r\n  const dashboardNavigation = loginIn && <DashboardNavigation />;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              to={routesPath.HOME}\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n\r\n          {authNavigation}\r\n          {dashboardNavigation}\r\n        </ul>\r\n        <UserProfile />\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n};\r\n\r\nexport default withAuth(Navbar);\r\n","import React from 'react';\r\n\r\nimport Navbar from '../Navbar/Navbar.js';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AppRoutes from '../components/ComponentPage/AppRoutes/AppRoutes.js';\n\nimport Layout from '../components/ComponentPage/Loyout/Loyout.js';\nimport { routes } from '../services/routes.js';\nimport { getCurrentUser } from '../redux/reducers/contacts/contactsOperations.js';\n\nclass App extends Component {\n  componentDidMount() {\n    const { getCurrentUser } = this.props;\n\n    getCurrentUser();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <AppRoutes routes={routes} />\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  getCurrentUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  loginError,\n  loginRequest,\n  loginSuccess,\n  logoutError,\n  logoutRequest,\n  logoutSuccess,\n  registerError,\n  registerRequest,\n  registerSuccess,\n  addContactSuccess,\n  getContactsSuccess,\n  removeContactSuccess,\n  changeFilter,\n} from '../contacts/contactsActions.js';\n\nimport { combineReducers } from 'redux';\n\n\nconst initialState = {\n  user: {\n    name: null,\n    email: null,\n  },\n  error: null,\n  token: null,\n  items: [],\n  filter: '',\n  erroMasage: '',\n};\n\nconst user = createReducer(initialState.user, {\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n  [logoutSuccess]: () => initialState.user,\n});\n\nconst token = createReducer(initialState.token, {\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => initialState.token,\n});\n\nconst handleError = () => initialState.error;\n\nconst error = createReducer(initialState.error, {\n  [loginRequest]: handleError,\n  [logoutRequest]: handleError,\n  [registerRequest]: handleError,\n  [getCurrentUserRequest]: handleError,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [registerError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n// ----with Toolkit----\nconst CreateAddContact = (state, action) => {\n  return [...state, { ...action.payload }];\n};\nconst CreateRemoveContact = (state, action) => {\n  return state.filter(item => {\n    return item.id !== action.payload;\n  });\n};\n\nconst itemsCreateReducer = createReducer(initialState.items, {\n  [getContactsSuccess]: (state, action) => action.payload,\n  [addContactSuccess]: CreateAddContact,\n  [removeContactSuccess]: CreateRemoveContact,\n});\n\nconst filterCreateReducer = createReducer(initialState.filter, {\n  [changeFilter]: (state, action) => action.payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsCreateReducer,\n  filter: filterCreateReducer,\n  user: user,\n  token: token,\n  error: error,\n});\n\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactsReducer } from './reducers/contacts/contactsReducer.js';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REHYDRATE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\n\nconst rootReducer = {\n  auth: persistedReducer,\n};\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, REGISTER],\n      },\n    }),\n  ],\n});\nconst persistor = persistStore(store);\nexport { persistor, store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Conteiner/App.js';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store.js';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addContactRequest = createAction('ADD_CONTACT_REQUEST');\nconst addContactSuccess = createAction('ADD_CONTACT_SUCCESS');\nconst addContactError = createAction('ADD_CONTACT_ERROR');\n\nconst getContactsRequest = createAction('GET_CONTACTS_REQUEST');\nconst getContactsSuccess = createAction('GET_CONTACTS_SUCCESS');\nconst getContactsError = createAction('GET_CONTACTS_ERROR');\n\nconst removeContactRequest = createAction('REMOVE_CONTACT_REQUEST');\nconst removeContactSuccess = createAction('REMOVE_CONTACT_SUCCESS');\nconst removeContactError = createAction('REMOVE_CONTACT_ERROR');\n\nconst changeFilter = createAction('CHANGE_FILTER');\nconst erroMasage = createAction('ERROR_MESSAGE');\n\nconst registerRequest = createAction(\"contact/registerRequest\");\nconst registerSuccess = createAction(\"contact/registerSuccess\");\nconst registerError = createAction(\"contact/registerError\");\n\nconst logoutRequest = createAction(\"contact/logoutRequest\");\nconst logoutSuccess = createAction(\"contact/logoutSuccess\");\nconst logoutError = createAction(\"contact/logoutError\");\n\nconst loginRequest = createAction(\"contact/loginRequest\");\nconst loginSuccess = createAction(\"contact/loginSuccess\");\nconst loginError = createAction(\"contact/loginError\");\n\nconst getCurrentUserRequest = createAction(\"contact/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"contact/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"contact/getCurrentUserError\");\n\n\nexport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  changeFilter,\n  erroMasage,\n  registerError,\n  registerSuccess,\n  registerRequest,\n  loginRequest,\n  loginSuccess,\n  logoutError,\n  logoutRequest,\n  logoutSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  erroMasage,\n  registerError,\n  registerSuccess,\n  registerRequest,\n  loginRequest,\n  loginSuccess,\n  logoutError,\n  logoutRequest,\n  logoutSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './contactsActions.js';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.Authorization = '';\n  },\n};\n\nconst register = credentials => dispatch => {\n  dispatch(registerRequest());\n  axios\n    .post('/users/signup', credentials)\n    .then(({ data }) => {\n      dispatch(registerSuccess(data));\n    })\n    .catch(error => {\n      dispatch(registerError(error));\n    });\n};\n\nconst login = credentials => dispatch => {\n  dispatch(loginRequest());\n  axios\n    .post('/users/login', credentials)\n    .then(({ data }) => {\n      dispatch(loginSuccess(data));\n    })\n    .catch(error => {\n      dispatch(loginError(error));\n    });\n};\n\nconst logout = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  dispatch(logoutRequest());\n  token.set(persistedToken);\n\n  axios\n    .post('/users/logout')\n    .then(() => {\n      dispatch(logoutSuccess());\n      token.unset();\n    })\n    .catch(error => {\n      dispatch(logoutError(error));\n    });\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  axios\n    .get('/users/current')\n    .then(({ data }) => {\n      dispatch(getCurrentUserSuccess(data));\n    })\n    .catch(error => {\n      dispatch(getCurrentUserError(error));\n    });\n};\n\n// -------------------------------------------\nconst addContact = contac => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', { ...contac })\n    .then(response => {\n      console.log(response);\n      dispatch(addContactSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(addContactError(error.message));\n    });\n};\n\nconst getContacts = () => dispatch => {\n  dispatch(getContactsRequest());\n  axios\n    .get('/contacts')\n    .then(response => {\n      dispatch(getContactsSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(getContactsError(error.message));\n      setTimeout(() => {\n        dispatch(erroMasage());\n      }, 1500);\n    });\n};\n\nconst removeContact = id => dispatch => {\n  dispatch(removeContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => {\n      dispatch(removeContactSuccess(id));\n    })\n    .catch(error => {\n      dispatch(removeContactError(error.message));\n      setTimeout(() => {\n        dispatch(erroMasage());\n      }, 1500);\n    });\n};\n\nexport {\n  addContact,\n  getContacts,\n  removeContact,\n  login,\n  register,\n  getCurrentUser,\n  logout,\n};\n// getCurrentUser\n"],"sourceRoot":""}